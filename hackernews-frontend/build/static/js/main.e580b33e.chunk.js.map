{"version":3,"sources":["services/storyService.js","services/loginService.js","components/Story.js","components/StoryList.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","storyServices","getAll","timespan","axios","get","getHidden","token","config","headers","Authorization","addHidden","hidden","post","login","form","a","response","data","loginService","Story","favicon","story","url","URL","hostname","e","console","log","id","className","src","alt","href","title","icon","faUser","by","faClock","moment","time","fromNow","role","faThumbsUp","score","faComments","descendants","onClick","faTimes","StoryList","stories","length","filter","includes","map","App","useState","setStories","setTimespan","setHidden","loading","setLoading","username","setUsername","password","setPassword","loginError","setLoginError","setToken","useEffect","storyService","then","catch","localToken","window","localStorage","getItem","handleLogin","event","preventDefault","goto","acct","pw","recvToken","setItem","timespanButtons","faHackerNewsSquare","size","type","faUserCircle","inverse","faSignInAlt","onSubmit","value","name","onChange","target","updatedHidden","concat","Boolean","location","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+SACMA,EAEA,+CAqBSC,EAFO,CAAEC,OAhBT,SAACC,GACd,OAAOA,EACHC,IAAMC,IAAIL,EAAO,uBAAmBG,IACpCC,IAAMC,IAAIL,EAAO,QAaSM,UAVd,SAACC,GACjB,IAAMC,EAAS,CAAEC,QAAS,CAAEC,cAAc,UAAD,OAAYH,KACrD,OAAOH,IAAMC,IAAIL,EAAU,SAAUQ,IAQIG,UALzB,SAACC,EAAQL,GACzB,IAAMC,EAAS,CAAEC,QAAS,CAAEC,cAAc,UAAD,OAAYH,KACrD,OAAOH,IAAMS,KAAKb,EAAU,SAAU,CAAEY,UAAUJ,KCb9CM,EAAK,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEAEWZ,IAAMS,KALzB,oDAKuCE,GAF/B,cAENE,EAFM,yBAGLA,EAASC,MAHJ,2CAAH,sDAYIC,EAFM,CAAEL,S,gCCqDRM,EArDD,SAAC,GAA0B,IACnCC,EADWC,EAAuB,EAAvBA,MAAOX,EAAgB,EAAhBA,UAEtB,IACEU,EAAUC,EAAMC,IACZ,6CAA+C,IAAIC,IAAIF,EAAMC,KAAKE,SAClE,iEACJ,MAAOC,GACPC,QAAQC,IAAI,wBAAyBN,EAAMC,IAAK,IAAKG,GAGvD,IAA+BG,EAG/B,OACE,sBAAKC,UAAU,kGAAf,UACE,gCACE,qBAAKC,IAAKV,EAASW,IAAI,YAAa,OAC/B,IACP,sBAAKF,UAAU,OAAf,UACE,oBAAGG,KAAMX,EAAMC,IAAf,cAAsBD,EAAMY,MAA5B,OADF,IAC0C,uBACxC,kCACE,cAAC,IAAD,CAAiBC,KAAMC,MADzB,IACqCd,EAAMe,GAD3C,YAC4D,IAC1D,cAAC,IAAD,CAAiBF,KAAMG,MAFzB,IAEsCC,IAAOjB,EAAMkB,MAAMC,aAChD,OACJ,IACP,sBACEX,UAAU,mDACVY,KAAK,QAFP,UAIE,oBAAGT,KAAK,IAAIS,KAAK,SAASZ,UAAU,4BAApC,UACE,cAAC,IAAD,CAAiBK,KAAMQ,MACtB,IAAKrB,EAAMsB,SACT,IACL,oBACEX,MAxBuBJ,EAwBKP,EAAMO,GAxBZ,+CACYA,IAwBlCC,UAAU,4BAFZ,UAIE,cAAC,IAAD,CAAiBK,KAAMU,MACtB,IAAKvB,EAAMwB,eACT,IACL,oBACEb,KAAK,IACLS,KAAK,SACLZ,UAAU,4BACViB,QAAS,kBAAMpC,EAAUW,EAAMO,KAJjC,UAME,cAAC,IAAD,CAAiBM,KAAMa,MAAY,OAChC,OACA,QClDEC,EATG,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,QAAStC,EAAwB,EAAxBA,OAAQD,EAAgB,EAAhBA,UAKpC,OAHwBC,EAAOuC,OAC3BD,EAAQE,QAFgB,SAAC9B,GAAD,OAAYV,EAAOyC,SAAS/B,EAAMO,OAG1DqB,GACmBI,KAAI,SAAChC,GAAD,OACzB,cAAC,EAAD,CAAsBA,MAAOA,EAAOX,UAAWA,GAAnCW,EAAMO,QCoNP0B,EAhNH,WACV,MAA8BC,mBAAS,IAAvC,mBAAON,EAAP,KAAgBO,EAAhB,KACA,EAAgCD,mBAAS,OAAzC,mBAAOrD,EAAP,KAAiBuD,EAAjB,KACA,EAA4BF,mBAAS,IAArC,mBAAO5C,EAAP,KAAe+C,EAAf,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAAgCL,mBAAS,IAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KACA,EAAgCP,mBAAS,IAAzC,mBAAOQ,EAAP,KAAiBC,EAAjB,KACA,EAAoCT,oBAAS,GAA7C,mBAAOU,EAAP,KAAmBC,EAAnB,KACA,EAA0BX,mBAAS,MAAnC,mBAAOjD,EAAP,KAAc6D,EAAd,KAEAC,qBAAU,WACR1C,QAAQC,IAAI,uBACZiC,GAAW,GACXS,EACGpE,OAAOC,GACPoE,MAAK,SAACtD,GACLU,QAAQC,IAAI,eACZ6B,EAAWxC,EAASC,MACpB2C,GAAW,MAEZW,OAAM,SAAC9C,GACNC,QAAQC,IAAI,iCAAkCzB,EAAU,KAAMuB,GAC9DmC,GAAW,QAEd,CAAC1D,IAEJkE,qBAAU,WACR,IAAMI,EAAaC,OAAOC,aAAaC,QAAQ,cAC3CH,GACFL,EAASK,KAEV,IAEHJ,qBAAU,WACJ9D,IACFoB,QAAQC,IAAI,sBACZ0C,EACGhE,UAAUC,GACVgE,MAAK,SAACtD,GACLU,QAAQC,IAAI,iBACZ+B,EAAU1C,EAASC,SAEpBsD,OAAM,SAAC9C,GACNC,QAAQC,IAAI,YAAaF,GACzBiC,EAAU,YAGf,CAACpD,IAEJ,IASMsE,EAAW,uCAAG,WAAOC,GAAP,eAAA9D,EAAA,6DAClB8D,EAAMC,iBADY,kBAGQ5D,EAAaL,MAAM,CACzCkE,KAAM,OACNC,KAAMnB,EACNoB,GAAIlB,IANU,QAGVmB,EAHU,QAQN5E,MAAQ6D,EAASe,EAAU5E,OAAS6D,EAAS,MACvDD,GAAc,GACdJ,EAAY,IACZE,EAAY,IACZS,OAAOC,aAAaS,QAAQ,aAAcD,EAAU5E,OAZpC,kDAchB4D,GAAc,GAdE,0DAAH,sDAgHXkB,EAAkB,WACtB,OACE,qCACE,wBAAQvD,UAAU,gBAAgBiB,QAAS,kBAAMW,EAAY,QAA7D,iBAGA,wBAAQ5B,UAAU,gBAAgBiB,QAAS,kBAAMW,EAAY,SAA7D,kBAGA,wBAAQ5B,UAAU,gBAAgBiB,QAAS,kBAAMW,EAAY,UAA7D,mBAGA,wBAAQ5B,UAAU,gBAAgBiB,QAAS,kBAAMW,EAAY,SAA7D,kBAGA,wBAAQ5B,UAAU,gBAAgBiB,QAAS,kBAAMW,EAAY,QAA7D,qBAON,OACE,gCA5EE,sBAAK5B,UAAU,qGAAf,UACE,sBAAKA,UAAU,2BAAf,UACE,cAAC,IAAD,CACEK,KAAMmD,IACNC,KAAK,KACLzD,UAAU,SAJd,6BAQA,sBAAKA,UAAU,sBAAf,UACE,wBACEA,UAAU,uBACV0D,KAAK,SACL,cAAY,WAHd,SAKGrF,IAEH,qBAAK2B,UAAU,oCAAf,SACE,qBAAKA,UAAU,yBAAf,SAAyCuD,WAG7C,qBAAKvD,UAAU,2CAAf,SACGuD,MAEH,sBAAKvD,UAAU,YAAf,UACE,mBAAGA,UAAU,MAAM,cAAY,WAAWG,KAAK,IAA/C,SACG1B,EACC,cAAC,IAAD,CACE4B,KAAMsD,IACNF,KAAK,KACLzD,UAAU,SACV4D,SAAO,IAGT,cAAC,IAAD,CACEvD,KAAMwD,IACNJ,KAAK,KACLzD,UAAU,SACV4D,SAAO,MAIb,qBACE5D,UAAU,oCACVD,GAAG,oBAFL,SAIGtB,EAAQ,qBAAKuB,UAAU,MAAf,uBAnFf,uBAAMA,UAAU,OAAO8D,SAAUf,EAAjC,UACE,sBAAK/C,UAAU,kBAAf,qBAEE,uBACE0D,KAAK,OACLK,MAAO/B,EACPgC,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBjC,EAAYiC,EAAOH,aAGjD,sBAAK/D,UAAU,kBAAf,qBAEE,uBACE0D,KAAK,WACLK,MAAO7B,EACP8B,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB/B,EAAY+B,EAAOH,aAGjD,wBAAQL,KAAK,SAAS1D,UAAU,kCAAhC,mBAGCoC,EACC,qBAAKpC,UAAU,mBAAf,qCACE,KACJ,qBAAKA,UAAU,mBAAf,SACE,kEACgC,IAC9B,mBAAGG,KAAK,qCAAR,4CAuFN,+BACG2B,EACC,sBAAK9B,UAAU,uCAAuCY,KAAK,QAA3D,wBACa,qBAAKZ,UAAU,iBAAiBY,KAAK,cAGlD,cAAC,EAAD,CAAWQ,QAASA,EAAStC,OAAQA,EAAQD,UAxJnC,SAACkB,GACjBF,QAAQC,IAAI,WAAYC,EAAI,IAAKjB,GACjC,IAAMqF,EAAgBrF,EAAOsF,OAAOrE,GACpC8B,EAAUsC,GACN1F,GACF+D,EAAa3D,UAAUkB,EAAItB,YCzDb4F,QACW,cAA7BzB,OAAO0B,SAAS3E,UAEe,UAA7BiD,OAAO0B,SAAS3E,UAEhBiD,OAAO0B,SAAS3E,SAAS4E,MACvB,2DCLNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SDoH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrC,MAAK,SAAAsC,GACjCA,EAAaC,kB","file":"static/js/main.e580b33e.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://besthackernews.herokuapp.com/api/v1/\"\n    : \"http://localhost:3000/api/v1/\";\n\nconst getAll = (timespan) => {\n  return timespan\n    ? axios.get(baseUrl + `get?timespan=${timespan}`)\n    : axios.get(baseUrl + `get`);\n};\n\nconst getHidden = (token) => {\n  const config = { headers: { Authorization: `bearer ${token}` } };\n  return axios.get(baseUrl + \"hidden\", config);\n};\n\nconst addHidden = (hidden, token) => {\n  const config = { headers: { Authorization: `bearer ${token}` } };\n  return axios.post(baseUrl + \"hidden\", { hidden }, config);\n};\n\nconst storyServices = { getAll, getHidden, addHidden };\n\nexport default storyServices;\n","import axios from \"axios\";\nconst baseUrl =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://besthackernews.herokuapp.com/api/v1/login\"\n    : \"http://localhost:3000/api/v1/login\";\n\nconst login = async (form) => {\n  /* try {*/\n  const response = await axios.post(baseUrl, form);\n  return response.data;\n  /*  } catch (e) {\n      console.log(\"login error: \", e);\n      return null;\n    }*/\n};\n\nconst loginService = { login };\n\nexport default loginService;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport moment from \"moment\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faThumbsUp,\n  faComments,\n  faUser,\n  faClock,\n} from \"@fortawesome/free-regular-svg-icons\";\n\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\n// story.by, descendants, score, time, title, url\n\nconst Story = ({ story, addHidden }) => {\n  var favicon\n  try {\n    favicon = story.url\n      ? \"https://www.google.com/s2/favicons?domain=\" + new URL(story.url).hostname\n      : \"https://www.google.com/s2/favicons?domain=news.ycombinator.com\";\n  } catch (e) {\n    console.log(\"error parsing favicon\", story.url, \":\", e)\n  }\n\n  const originalDiscussionUrl = (id) =>\n    `https://news.ycombinator.com/item?id=${id}`;\n\n  return (\n    <div className=\"bg-light text-dark rounded border-bottom border-right d-flex p-md-3 p-sm-2 px-2 mx-md-3 my-md-1\">\n      <div>\n        <img src={favicon} alt=\"favicon\" />{\" \"}\n      </div>{\" \"}\n      <div className=\"px-3\">\n        <a href={story.url}> {story.title} </a> <br />\n        <small>\n          <FontAwesomeIcon icon={faUser} /> {story.by} &nbsp;&nbsp;{\" \"}\n          <FontAwesomeIcon icon={faClock} /> {moment(story.time).fromNow()}\n        </small>{\" \"}\n      </div>{\" \"}\n      <div\n        className=\"btn-group btn-group-sm d-flex align-items-center\"\n        role=\"group\"\n      >\n        <a href=\"#\" role=\"button\" className=\"btn btn-outline-secondary\">\n          <FontAwesomeIcon icon={faThumbsUp} />\n          {\" \"}{story.score}\n        </a>{\" \"}\n        <a\n          href={originalDiscussionUrl(story.id)}\n          className=\"btn btn-outline-secondary\"\n        >\n          <FontAwesomeIcon icon={faComments} />\n          {\" \"}{story.descendants}\n        </a>{\" \"}\n        <a\n          href=\"#\"\n          role=\"button\"\n          className=\"btn btn-outline-secondary\"\n          onClick={() => addHidden(story.id)}\n        >\n          <FontAwesomeIcon icon={faTimes} />{\" \"}\n        </a>{\" \"}\n      </div>{\" \"}\n    </div>\n  );\n};\n\nexport default Story;\n","import React from \"react\";\nimport Story from \"./Story\";\n\n// story.by, descendants, score, time, title, url\n\nconst StoryList = ({ stories, hidden, addHidden }) => {\n  const filterHiddenStories = (story) => !hidden.includes(story.id);\n  const filteredStories = hidden.length\n    ? stories.filter(filterHiddenStories)\n    : stories;\n  return filteredStories.map((story) => (\n    <Story key={story.id} story={story} addHidden={addHidden} />\n  ));\n};\nexport default StoryList;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from \"react\";\n// import $ from \"jquery\";\n// import Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHackerNewsSquare } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUserCircle, faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./App.css\";\nimport storyService from \"./services/storyService\";\nimport loginService from \"./services/loginService\";\nimport StoryList from \"./components/StoryList\";\n\nconst App = () => {\n  const [stories, setStories] = useState([]);\n  const [timespan, setTimespan] = useState(\"Day\");\n  const [hidden, setHidden] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginError, setLoginError] = useState(false);\n  const [token, setToken] = useState(null);\n\n  useEffect(() => {\n    console.log(\"fetching stories...\");\n    setLoading(true);\n    storyService\n      .getAll(timespan)\n      .then((response) => {\n        console.log(\"...got them\");\n        setStories(response.data);\n        setLoading(false);\n      })\n      .catch((e) => {\n        console.log(\"didn't get them for timespan [\", timespan, \"] \", e);\n        setLoading(false);\n      });\n  }, [timespan]);\n\n  useEffect(() => {\n    const localToken = window.localStorage.getItem(\"loginToken\");\n    if (localToken) {\n      setToken(localToken);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (token) {\n      console.log(\"fetching hidden...\");\n      storyService\n        .getHidden(token)\n        .then((response) => {\n          console.log(\"...got hidden\");\n          setHidden(response.data);\n        })\n        .catch((e) => {\n          console.log(\"whoopsie:\", e);\n          setHidden(null);\n        });\n    }\n  }, [token]);\n\n  const addHidden = (id) => {\n    console.log(\"hiding: \", id, \":\", hidden);\n    const updatedHidden = hidden.concat(id);\n    setHidden(updatedHidden);\n    if (token) {\n      storyService.addHidden(id, token);\n    }\n  };\n\n  const handleLogin = async (event) => {\n    event.preventDefault();\n    try {\n      const recvToken = await loginService.login({\n        goto: \"news\",\n        acct: username,\n        pw: password,\n      });\n      recvToken.token ? setToken(recvToken.token) : setToken(null);\n      setLoginError(false);\n      setUsername(\"\");\n      setPassword(\"\");\n      window.localStorage.setItem(\"loginToken\", recvToken.token);\n    } catch (error) {\n      setLoginError(true);\n      // TODO FIXME\n      //$(\"#loginDropdownMenu\").dropdown(\"toggle\");\n    }\n  };\n\n  const loginForm = () => {\n    return (\n      <form className=\"px-2\" onSubmit={handleLogin}>\n        <div className=\"mb-3 form-group\">\n          Username\n          <input\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div className=\"mb-3 form-group\">\n          Password\n          <input\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"btn-dark btn-md mb-2 form-group\">\n          Login\n        </button>\n        {loginError ? (\n          <div className=\"mb-3 text-danger\">Wrong username/password</div>\n        ) : null}\n        <div className=\"small form-group\">\n          <small>\n            Use your Hacker News login or{\" \"}\n            <a href=\"https://news.ycombinator.com/login\">register there</a>\n          </small>\n        </div>\n      </form>\n    );\n  };\n\n  const navBar = () => {\n    return (\n      <nav className=\"navbar fixed-top navbar-expand navbar-dark bg-dark d-flex justify-content-start align-items-center\">\n        <div className=\"navbar-brand h1 m-0 mr-3\">\n          <FontAwesomeIcon\n            icon={faHackerNewsSquare}\n            size=\"lg\"\n            className=\"mr-2\"\n          />\n          Top Hacker News Stories\n        </div>\n        <div className=\"btn-group d-md-none\">\n          <button\n            className=\"btn btn-sm btn-light\"\n            type=\"button\"\n            data-toggle=\"dropdown\"\n          >\n            {timespan}\n          </button>\n          <div className=\"dropdown-menu dropdown-menu-right\">\n            <div className=\"btn-group btn-group-sm\">{timespanButtons()}</div>\n          </div>\n        </div>\n        <div className=\"btn-group btn-group-sm d-none d-md-block\">\n          {timespanButtons()}\n        </div>\n        <div className=\"btn-group\">\n          <a className=\"btn\" data-toggle=\"dropdown\" href=\"#\">\n            {token ? (\n              <FontAwesomeIcon\n                icon={faUserCircle}\n                size=\"lg\"\n                className=\"m-auto\"\n                inverse\n              />\n            ) : (\n              <FontAwesomeIcon\n                icon={faSignInAlt}\n                size=\"lg\"\n                className=\"m-auto\"\n                inverse\n              />\n            )}\n          </a>\n          <div\n            className=\"dropdown-menu dropdown-menu-right\"\n            id=\"loginDropdownMenu\"\n          >\n            {token ? <div className=\"m-3\">Logged in</div> : loginForm()}\n          </div>\n        </div>\n      </nav>\n    );\n  };\n\n  const timespanButtons = () => {\n    return (\n      <>\n        <button className=\"btn btn-light\" onClick={() => setTimespan(\"Day\")}>\n          Day\n        </button>\n        <button className=\"btn btn-light\" onClick={() => setTimespan(\"Week\")}>\n          Week\n        </button>\n        <button className=\"btn btn-light\" onClick={() => setTimespan(\"Month\")}>\n          Month\n        </button>\n        <button className=\"btn btn-light\" onClick={() => setTimespan(\"Year\")}>\n          Year\n        </button>\n        <button className=\"btn btn-light\" onClick={() => setTimespan(\"All\")}>\n          All\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      {navBar()}\n      <main>\n        {loading ? (\n          <div className=\"alert alert-primary align-middle m-3\" role=\"alert\">\n            Loading... <div className=\"spinner-border\" role=\"status\" />\n          </div>\n        ) : (\n          <StoryList stories={stories} hidden={hidden} addHidden={addHidden} />\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n// import $ from \"jquery\";\n// import Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}