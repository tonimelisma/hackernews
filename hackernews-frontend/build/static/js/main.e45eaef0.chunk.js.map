{"version":3,"sources":["services/storyService.js","services/loginService.js","components/Story.js","components/StoryList.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","timespan","axios","get","token","config","headers","Authorization","hidden","post","login","form","a","response","data","Story","id","story","addHidden","favicon","url","URL","hostname","className","src","alt","href","title","icon","faUser","by","faClock","moment","time","fromNow","role","faThumbsUp","score","faComments","descendants","onClick","faTimes","StoryList","stories","length","filter","includes","map","App","useState","setStories","setTimespan","setHidden","loading","setLoading","username","setUsername","password","setPassword","loginError","setLoginError","setToken","useEffect","console","log","storyService","then","catch","e","localToken","window","localStorage","getItem","handleLogin","event","preventDefault","loginService","goto","acct","pw","recvToken","setItem","timespanButtons","faHackerNewsSquare","size","type","data-toggle","faUserCircle","inverse","faSignInAlt","onSubmit","value","name","onChange","target","updatedHidden","concat","Boolean","location","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e45eaef0.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://besthackernews.herokuapp.com/api/v1/\"\n    : \"http://localhost:3000/api/v1/\";\n\nconst getAll = timespan => {\n  return timespan\n    ? axios.get(baseUrl + \"get\" + \"?timespan=\" + timespan)\n    : axios.get(baseUrl + \"get\");\n};\n\nconst getHidden = token => {\n  const config = { headers: { Authorization: `bearer ${token}` } };\n  return axios.get(baseUrl + \"hidden\", config);\n};\n\nconst addHidden = (hidden, token) => {\n  const config = { headers: { Authorization: `bearer ${token}` } };\n  return axios.post(baseUrl + \"hidden\", { hidden }, config);\n};\n\nexport default { getAll, getHidden, addHidden };\n","import axios from \"axios\";\nconst baseUrl =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://besthackernews.herokuapp.com/api/v1/login\"\n    : \"http://localhost:3000/api/v1/login\";\n\nconst login = async form => {\n  /* try {*/\n  const response = await axios.post(baseUrl, form);\n  return response.data;\n  /*  } catch (e) {\n    console.log(\"login error: \", e);\n    return null;\n  }*/\n};\n\nexport default { login };\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faThumbsUp,\n  faComments,\n  faUser,\n  faClock\n} from \"@fortawesome/free-regular-svg-icons\";\n\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\n// story.by, descendants, score, time, title, url\n\nconst Story = ({ story, addHidden }) => {\n  const favicon = story.url\n    ? \"https://www.google.com/s2/favicons?domain=\" + new URL(story.url).hostname\n    : \"https://www.google.com/s2/favicons?domain=news.ycombinator.com\";\n\n  const originalDiscussionUrl = id =>\n    `https://news.ycombinator.com/item?id=${id}`;\n\n  return (\n    <div className=\"bg-light text-dark rounded border-bottom border-right d-flex p-md-3 p-sm-2 px-2 mx-md-3 my-md-1\">\n      <div>\n        <img src={favicon} alt=\"favicon\" />{\" \"}\n      </div>\n      <div className=\"px-3\">\n        <a href={story.url}>{story.title}</a>\n        <br />\n        <small>\n          <FontAwesomeIcon icon={faUser} /> {story.by}\n          &nbsp;&nbsp;\n          <FontAwesomeIcon icon={faClock} /> {moment(story.time).fromNow()}\n        </small>\n      </div>\n      <div\n        className=\"btn-group btn-group-sm d-flex align-items-center\"\n        role=\"group\"\n      >\n        <a href=\"#\" className=\"btn btn-outline-secondary\">\n          <FontAwesomeIcon icon={faThumbsUp} />\n          &nbsp;{story.score}\n        </a>\n        <a\n          href={originalDiscussionUrl(story.id)}\n          className=\"btn btn-outline-secondary\"\n        >\n          <FontAwesomeIcon icon={faComments} />\n          &nbsp;{story.descendants}\n        </a>\n        <a\n          href=\"#\"\n          className=\"btn btn-outline-secondary\"\n          onClick={() => addHidden(story.id)}\n        >\n          <FontAwesomeIcon icon={faTimes} />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Story;\n","import React from \"react\";\nimport Story from \"./Story\";\n\n// story.by, descendants, score, time, title, url\n\nconst StoryList = ({ stories, hidden, addHidden }) => {\n  const filterHiddenStories = story => !hidden.includes(story.id);\n  const filteredStories = hidden.length\n    ? stories.filter(filterHiddenStories)\n    : stories;\n  return filteredStories.map(story => (\n    <Story key={story.id} story={story} addHidden={addHidden} />\n  ));\n};\nexport default StoryList;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from \"react\";\nimport $ from \"jquery\";\nimport Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHackerNewsSquare } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUserCircle, faSignInAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./App.css\";\nimport storyService from \"./services/storyService\";\nimport loginService from \"./services/loginService\";\nimport StoryList from \"./components/StoryList\";\n\nconst App = () => {\n  const [stories, setStories] = useState([]);\n  const [timespan, setTimespan] = useState(\"Day\");\n  const [hidden, setHidden] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginError, setLoginError] = useState(false);\n  const [token, setToken] = useState(null);\n\n  useEffect(() => {\n    console.log(\"fetching stories...\");\n    setLoading(true);\n    storyService\n      .getAll(timespan)\n      .then(response => {\n        console.log(\"...got them\");\n        setStories(response.data);\n        setLoading(false);\n      })\n      .catch(e => {\n        console.log(\"didn't get them: \", e);\n        setLoading(false);\n      });\n  }, [timespan]);\n\n  useEffect(() => {\n    const localToken = window.localStorage.getItem(\"loginToken\");\n    if (localToken) {\n      setToken(localToken);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (token) {\n      console.log(\"fetching hidden...\");\n      storyService\n        .getHidden(token)\n        .then(response => {\n          console.log(\"...got hidden\");\n          setHidden(response.data);\n        })\n        .catch(e => {\n          console.log(\"whoopsie:\", e);\n          setHidden(null);\n        });\n    }\n  }, [token]);\n\n  const addHidden = id => {\n    console.log(\"hiding: \", id, \":\", hidden);\n    const updatedHidden = hidden.concat(id);\n    setHidden(updatedHidden);\n    if (token) {\n      storyService.addHidden(id, token);\n    }\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    try {\n      const recvToken = await loginService.login({\n        goto: \"news\",\n        acct: username,\n        pw: password\n      });\n      recvToken.token ? setToken(recvToken.token) : setToken(null);\n      setLoginError(false);\n      setUsername(\"\");\n      setPassword(\"\");\n      window.localStorage.setItem(\"loginToken\", recvToken.token);\n    } catch (error) {\n      setLoginError(true);\n      // TODO FIXME\n      //$(\"#loginDropdownMenu\").dropdown(\"toggle\");\n    }\n  };\n\n  const loginForm = () => {\n    return (\n      <form className=\"px-2\" onSubmit={handleLogin}>\n        <div className=\"mb-3 form-group\">\n          Username\n          <input\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div className=\"mb-3 form-group\">\n          Password\n          <input\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\" className=\"btn-dark btn-md mb-2 form-group\">\n          Login\n        </button>\n        {loginError ? (\n          <div className=\"mb-3 text-danger\">Wrong username/password</div>\n        ) : null}\n        <div className=\"small form-group\">\n          <small>\n            Use your Hacker News login or{\" \"}\n            <a href=\"https://news.ycombinator.com/login\">register there</a>\n          </small>\n        </div>\n      </form>\n    );\n  };\n\n  const navBar = () => {\n    return (\n      <nav className=\"navbar fixed-top navbar-expand navbar-dark bg-dark d-flex justify-content-start align-items-center\">\n        <div className=\"navbar-brand h1 m-0 mr-3\">\n          <FontAwesomeIcon\n            icon={faHackerNewsSquare}\n            size=\"lg\"\n            className=\"mr-2\"\n          />\n          Top Hacker News Stories\n        </div>\n        <div className=\"btn-group d-md-none\">\n          <button\n            className=\"btn btn-sm btn-light\"\n            type=\"button\"\n            data-toggle=\"dropdown\"\n          >\n            {timespan}\n          </button>\n          <div className=\"dropdown-menu dropdown-menu-right\">\n            <div className=\"btn-group btn-group-sm\">{timespanButtons()}</div>\n          </div>\n        </div>\n        <div className=\"btn-group btn-group-sm d-none d-md-block\">\n          {timespanButtons()}\n        </div>\n        <div className=\"btn-group\">\n          <a className=\"btn\" data-toggle=\"dropdown\" href=\"#\">\n            {token ? (\n              <FontAwesomeIcon\n                icon={faUserCircle}\n                size=\"lg\"\n                className=\"m-auto\"\n                inverse\n              />\n            ) : (\n              <FontAwesomeIcon\n                icon={faSignInAlt}\n                size=\"lg\"\n                className=\"m-auto\"\n                inverse\n              />\n            )}\n          </a>\n          <div\n            className=\"dropdown-menu dropdown-menu-right\"\n            id=\"loginDropdownMenu\"\n          >\n            {token ? <div className=\"m-3\">Logged in</div> : loginForm()}\n          </div>\n        </div>\n      </nav>\n    );\n  };\n\n  const timespanButtons = () => {\n    return (\n      <>\n        <button className=\"btn btn-light\" onClick={() => setTimespan(\"Day\")}>\n          Day\n        </button>\n        <button className=\"btn btn-light\" onClick={() => setTimespan(\"Week\")}>\n          Week\n        </button>\n        <button className=\"btn btn-light\" onClick={() => setTimespan(\"Month\")}>\n          Month\n        </button>\n        <button className=\"btn btn-light\" onClick={() => setTimespan(\"Year\")}>\n          Year\n        </button>\n        <button className=\"btn btn-light\" onClick={() => setTimespan(\"All\")}>\n          All\n        </button>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      {navBar()}\n      <main>\n        {loading ? (\n          <div className=\"alert alert-primary align-middle m-3\" role=\"alert\">\n            Loading... <div className=\"spinner-border\" role=\"status\" />\n          </div>\n        ) : (\n          <StoryList stories={stories} hidden={hidden} addHidden={addHidden} />\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport $ from \"jquery\";\nimport Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}